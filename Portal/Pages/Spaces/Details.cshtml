@page "{id}"
@using API.JsonLd
@model Portal.Pages.Spaces.Details

@{
    var spaceId = Model.SpacePageModel.Space.GetLastPathElementAsInt();
    ViewData["Title"] = $"Space {spaceId}: {Model.SpacePageModel.Space.Name}";
}

@section header
{
    <link href="https://cdn.jsdelivr.net/npm/dropzone@5.9.2/dist/min/dropzone.min.css" rel="stylesheet" />
}

<form method="post" asp-page-handler="Convert">
    <input type="hidden" value="@spaceId" name="spaceId">
    @if (Model.SpacePageModel.Space.IsManifestSpace())
    {
        <input type="hidden" value="false" name="manifestMode">
        <button type="submit" class="btn btn-primary">
            Convert to 'Normal' mode
        </button>
    }
    else
    {
        <input type="hidden" value="true" name="manifestMode">
        <button type="submit" class="btn btn-primary">
            Convert to 'Manifest' mode
        </button>
    }
</form>

<form action="/dropzone/@Model.Customer/@Model.Space/local"
      class="dropzone"
      id="dropzoneForm">
</form>


<div class="jumbotron" id="nextBox">
    <button class="btn btn-primary btn-lg disabled" id="iiifify">IIIF-ify this image... &raquo;</button>
</div>

<table class="table">
    <thead>
    <tr>
        <th scope="col"></th>
        <th scope="col">n1</th>
        <th scope="col">Name</th>
        <th scope="col">Created</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var image in Model.SpacePageModel.Images.Members)
    {
        <tr>
            <td>
                @if (image.Family == 'I')
                {
                    <iiif-thumb 
                        customer-url-part="@Model.Customer"
                        space-url-part="@Model.Space"
                        api-image="@image"
                        class="iiifpreview" 
                        settings="@Model.DlcsSettings"
                        small="28" large="@Model.DlcsSettings.PortalThumb" />
                }
            </td>
            <td>@image.Number1</td>
            <td><a asp-page="/Images/Index" 
                   asp-route-space="@Model.Space" 
                   asp-route-image="@image.GetLastPathElement()">@image.GetLastPathElement()</a></td>
            <td>@image.Created</td>
        </tr>
    }
    </tbody>
</table>

@section Scripts
{
<script src="https://cdn.jsdelivr.net/npm/dropzone@5.9.2/dist/dropzone.min.js"></script>
<script>

    document.getElementById('nextBox').style.display = "none";
    Dropzone.options.dropzoneForm = {
        paramName: "file", // The name that will be used to transfer the file
        maxFilesize: 10, // MB,
        maxFiles: 32,
        dictDefaultMessage: "Drop images from your computer or the web",
        init: function() {
            this.on("success", fileSuccess);
            this.on("error", fileSuccess);
            this.on("queuecomplete", queuecomplete);
            this.on("drop", drop);
            this.on("dragenter", () => console.log("DRAG"));
            window.pDropZone = this;
        }
    };
    
        function fileSuccess(file, response) {
            log(response.message);
        }

        function queuecomplete() {
            log("queuecomplete");
            setNext(true);
        }

        function drop(e) {
            setNext(false);
            if (e.dataTransfer.files.length > 0) {
                // dropzone 
            } else {
                //Find the url embedded in the dataTransfer data
                var data = e.dataTransfer.getData("text/html");
                var matches = data.match(/https?:\/\/[^"]+/gi);
                var url = (matches || [false])[0]; //returns the url or false if no match found
                if (url) {
                    pseudoUpload(url);
                }
            }
        }
        
        function pseudoUpload(url) {
            // Create the mock file:
            var mockFile = { name: "External: " + url, size: 0 };

            // Call the default addedfile event handler
            window.pDropZone.emit("addedfile", mockFile);

            // And optionally show the thumbnail of the file:
            //window.pDropZone.emit("thumbnail", mockFile, url);
            // Or if the file on your server is not yet in the right
            // size, you can let Dropzone download and resize it
            // callback and crossOrigin are optional.
            window.pDropZone.createThumbnailFromUrl(mockFile, "/Content/external_link.png"); //, callback, crossOrigin);

            // Make sure that there is no progress bar, etc...
            window.pDropZone.emit("complete", mockFile);
            fetch('/dropzone/@Model.Customer/@Model.Space/external', {
              method: 'POST',
              credentials: 'same-origin',
              headers: {'Content-Type': 'application/json'},
              body: JSON.stringify({ externalUrl: url }),
            })
            .then(response => response.json())
            .then(data => {
                log("uploaded external url " + url);
                if (window.pDropZone.getQueuedFiles().length === 0 && window.pDropZone.getUploadingFiles().length === 0) {
                    setNext(true);
                } else {
                    setNext(false);
                }
            })
            .catch((error) => {
                log("FAILED to upload external url " + url + ", " + error);
            });
        }

        function log(s) {
            // $('#logoutput').append(s + "<br/>");
            console.log(s);
        }

        function setNext(available) {
            log("available: " + available);
            let link = document.getElementById('iiifify');
            if (window.pDropZone.getAcceptedFiles().length > 1) {
                link.innerText = 'IIIF-ify these images »';
            } else {
                link.innerText = 'IIIF-ify this image »';
            }
            if (available) {
                document.getElementById('nextBox').style.display = "";
                link.disabled = "disabled";
                link.setAttribute('class', 'btn btn-primary btn-lg');
            } else {
                link.disabled = "";
                link.setAttribute('class', 'btn btn-primary btn-lg disabled');
            }
        }
</script>
}

